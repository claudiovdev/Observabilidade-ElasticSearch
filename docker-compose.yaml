version: "3"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ../volumes/elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - observability

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0  # Substitua pela versão compatível
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOST: '["http://elasticsearch:9200"]'
    networks:
      - observability
    depends_on:
      - elasticsearch

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.13.0
    container_name: metricbeat
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./beats/metric/metricbeat.yml:/usr/share/metricbeat/metricbeat.yaml
    restart: on-failure
    networks:
      - observability
    depends_on:
      - kibana

  heartbeat:
    image: docker.elastic.co/beats/heartbeat:7.13.0
    container_name: heartbeat
    volumes:
      - ./beats/heartbeat/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml
    environment:
      - setup.kibana.host=kibana:5601
    networks:
      - observability
    depends_on:
      - kibana

  apm:
    image: docker.elastic.co/apm/apm-server-oss:7.13.0
    container_name: apm
    volumes:
      - ./apm/apm-server.yml:/usr/share/apm-server/apm-server.yml
    ports:
      - 8200:8200
    restart: on-failure
    networks:
      - observability
    depends_on:
      - kibana

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.13.0
    command: filebeat -e -strict.perms=false
    container_name: filebeat
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./beats/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - logs-app:/var/log
    restart: on-failure
    networks:
      - observability
    depends_on:
      - kibana

  mysql:
    image: mysql
    networks:
      - observability
    restart: always
    ports:
      - "3309:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: algaworks_ecommerce


networks:
  observability:
    driver: bridge

volumes:
  logs-app:   # Garantindo que o volume logs-app está definido
    external: true   # Indica que este volume já existe no Docker


# Comando para rodar aplicação docker run -v logs-app:/logs -p 8080:8080 --network observabilidade_observability app-java -d